# -*- coding: utf-8 -*-
"""datacareerjumpstart.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tzSjVVQq1uOSbYdj8I-O1gB41uHEmOxA

# 1.- Libraries
"""

import datetime
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import warnings
warnings.filterwarnings('ignore')

plt.rcParams['figure.figsize'] = (10, 7.5)
plt.rcParams['axes.grid'] = False

"""# 2.- Datasets & cleaning"""

from google.colab import drive
drive.mount('/content/drive')

"""## 2.1 Azuki

### 2.1.1 Cleaning Sales
"""

df_azuki_sales = pd.read_csv('/content/drive/MyDrive/Hackathon/csv/azuki/sales_0xED5AF388653567Af2F388E6224dC7C4b3241C544_azuki.csv' ,sep=',')
df_azuki_sales.head()

print("rows {}".format(df_azuki_sales.shape[0]))
print("Columns {}".format(df_azuki_sales.shape[1]))

df_azuki_sales.info()

df_azuki_sales.isnull().sum()

drop_cols = ['transaction_hash', 'block_number', 'maker', 'taker']
df_azuki_sales = df_azuki_sales.drop(drop_cols, axis=1)

df_azuki_sales.isnull().sum()

df_azuki_sales['year'] = pd.DatetimeIndex(df_azuki_sales['date']).year
df_azuki_sales.head()

df_azuki_sales['chain'] = 'eth'
df_azuki_sales.head()

df_azuki_sales['nft'] = 'azuki'
df_azuki_sales.head()

"""## 2.2 Bored APE

### 2.2.1 Cleaning sales
"""

df_boredape_sales = pd.read_csv('/content/drive/MyDrive/Hackathon/csv/boredape/sales_0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D_boredape.csv' ,sep=',')
df_boredape_sales.head()

print("rows {}".format(df_boredape_sales.shape[0]))
print("Columns {}".format(df_boredape_sales.shape[1]))

df_boredape_sales.info()

df_boredape_sales.isnull().sum()

drop_cols = ['transaction_hash', 'block_number', 'maker', 'taker']
df_boredape_sales = df_boredape_sales.drop(drop_cols, axis=1)

df_boredape_sales.isnull().sum()

df_boredape_sales['year'] = pd.DatetimeIndex(df_boredape_sales['date']).year
df_boredape_sales.head()

df_boredape_sales['chain'] = 'eth'
df_boredape_sales.head()

df_boredape_sales['nft'] = 'boredape'
df_boredape_sales.head()

"""## 2.3 Doodles

### 2.3.1 Cleaning sales
"""

df_doodles_sales = pd.read_csv('/content/drive/MyDrive/Hackathon/csv/doodles/sales_0x8a90CAb2b38dba80c64b7734e58Ee1dB38B8992e_doodles.csv' ,sep=',')
df_doodles_sales.head()

print("rows {}".format(df_doodles_sales.shape[0]))
print("Columns {}".format(df_doodles_sales.shape[1]))

df_doodles_sales.info()

df_doodles_sales.isnull().sum()

drop_cols = ['transaction_hash', 'block_number', 'maker', 'taker']
df_doodles_sales = df_doodles_sales.drop(drop_cols, axis=1)

df_doodles_sales.isnull().sum()

df_doodles_sales['year'] = pd.DatetimeIndex(df_doodles_sales['date']).year
df_doodles_sales.head()

df_doodles_sales['chain'] = 'eth'
df_doodles_sales.head()

df_doodles_sales['nft'] = 'doodles'
df_doodles_sales.head()

"""## 2.4 Decentraland

### 2.4.1 Cleaning sales
"""

df_decentraland_sales = pd.read_csv('/content/drive/MyDrive/Hackathon/csv/decentraland/sales_0xF87E31492Faf9A91B02Ee0dEAAd50d51d56D5d4d_decentraland.csv' ,sep=',')
df_decentraland_sales.head()

print("rows {}".format(df_decentraland_sales.shape[0]))
print("Columns {}".format(df_decentraland_sales.shape[1]))

df_decentraland_sales.info()

df_decentraland_sales.isnull().sum()

drop_cols = ['transaction_hash', 'block_number', 'maker', 'taker']
df_decentraland_sales = df_decentraland_sales.drop(drop_cols, axis=1)

df_decentraland_sales.isnull().sum()

df_decentraland_sales['year'] = pd.DatetimeIndex(df_decentraland_sales['date']).year
df_decentraland_sales.head()

df_decentraland_sales['chain'] = 'eth'
df_decentraland_sales.head()

df_decentraland_sales['nft'] = 'decentraland'
df_decentraland_sales.head()

"""# 3.- Combine"""

frames = [df_azuki_sales, df_boredape_sales, df_doodles_sales, df_decentraland_sales]
  
result = pd.concat(frames)
result.tail()

print("rows {}".format(result.shape[0]))
print("Columns {}".format(result.shape[1]))

"""# 4.- Analysis

### 4.1.- Which NFT has got more total sales?
"""

plt.figure(figsize=(12, 6))
sns.countplot(x="nft", data=result, order = result['nft'].value_counts().index)
plt.xticks(rotation=85)

"""### 4.2.- Which year has most total sales?"""

plt.figure(figsize=(14, 10))
sns.countplot(x="year", data=result, order = result.groupby(by=['year'])['nft'].count().sort_values(ascending=False).index)
plt.xticks(rotation=85)

"""### 4.3.- Which NFT has got more total sales per year"""

plt.figure(figsize=(30, 10))
sns.countplot(x="year", data=result, hue='nft', order=result.year.value_counts().iloc[:5].index)
plt.xticks(size=16, rotation=85)

"""### 4.4.- Which year got more ETH sales"""

data_year = result.groupby(by=['year'])['sale_price_eth'].sum()
data_year = data_year.reset_index()
plt.figure(figsize=(16, 10))
sns.barplot(x="year", y="sale_price_eth", data=data_year)
plt.xticks(rotation=85)

"""### 4.5.- Which NFT got more ETH sales"""

data_nft = result.groupby(by=['nft'])['sale_price_eth'].sum()
data_nft = data_nft.reset_index()
data_nft = data_nft.sort_values(by=['sale_price_eth'], ascending=False)

plt.figure(figsize=(16, 10))
sns.barplot(x="nft", y="sale_price_eth", data=data_nft)
plt.xticks(rotation=85)

"""### 4.6.- Top 20 buyers"""

top_buyer = result.groupby(by=['buyer'])['year'].count().sort_values(ascending=False).head(20)
top_buyer = pd.DataFrame(top_buyer).reset_index()

plt.figure(figsize=(16, 10))
sns.countplot(x="buyer", data=result, order = result.groupby(by=['buyer'])['year'].count().sort_values(ascending=False).iloc[:20].index)
plt.xticks(rotation=85)

"""### 4.7.- Top buyers per YEAR"""

top_buyer_year =  result[['year', 'buyer']]
top_buyer_year_df = top_buyer_year.groupby(by=['year', 'buyer']).size().reset_index(name='Count')
top_buyer_year_idx =  top_buyer_year_df.groupby(by=['year'])['Count'].transform(max) == top_buyer_year_df['Count']
top_buyer_year_count = top_buyer_year_df[top_buyer_year_idx].reset_index(drop=True)
top_buyer_year_count  = top_buyer_year_count.drop_duplicates(subset=["year", "Count"], keep='last').reset_index(drop=True)
buyer= top_buyer_year_count['buyer']

plt.figure(figsize=(30, 15))
g = sns.barplot(x='year', y='Count', data=top_buyer_year_count)
index = 0
for value in top_buyer_year_count['Count'].values:
    g.text(index, value + 5, str(buyer[index] + '(' +str(value)+')'), color='#000', size=15, rotation= 85, ha="center")
    index += 1

